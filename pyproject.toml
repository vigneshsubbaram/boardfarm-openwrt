[build-system]
build-backend = "flit_core.buildapi"
requires = ["flit_core >=3.2,<4"]

[project]
authors = [
    { name = "Various", email = "vigneshsubbaram@gmail.com" },
]
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Telecommunications Industry",
    "License :: OSI Approved :: BSD License",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Testing :: Acceptance",
    "Operating System :: POSIX :: Linux",
    "Topic :: Software Development :: Embedded Systems",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Typing :: Typed",
]
dynamic = ['version', 'description']
license = { file = "LICENSE" }
name = "boardfarm3_openwrt"
readme = "README.md"
requires-python = ">=3.9"

dependencies = [
    "boardfarm3"
]

[project.optional-dependencies]
dev = [
    "black",
    "flake8",
    "flake8-bugbear",
    "flake8-builtins",
    "flake8-comprehensions",
    "flake8-docstrings",
    "flake8-rst",
    "flake8-rst-docstrings",
    "darglint",
    "mypy>=1.3",
    "nox",
    "pre-commit",
    "pylint",
    "ruff",
    "types-ipaddress",
    "types-PyYAML",
    "types-requests",
]
doc = ["sphinx"]
test = ["pytest-cov", "pytest-mock", "pytest-randomly"]

[project.entry-points."boardfarm"]
        openwrt = "boardfarm3_openwrt.plugins.openwrt"

[project.urls]
Source = "https://github.com/vigneshsubbaram/boardfarm-openwrt"

[tool.commitizen]
bump_message = "Bump version to $new_version"
name = "cz_conventional_commits"
style = [
    [
        "qmark",
        "fg:#ff9d00 bold",
    ],
    [
        "question",
        "bold",
    ],
    [
        "answer",
        "fg:#ff9d00 bold",
    ],
    [
        "pointer",
        "fg:#ff9d00 bold",
    ],
    [
        "highlighted",
        "fg:#ff9d00 bold",
    ],
    [
        "selected",
        "fg:#cc5454",
    ],
    [
        "separator",
        "fg:#cc5454",
    ],
    [
        "instruction",
        "",
    ],
    [
        "text",
        "",
    ],
    [
        "disabled",
        "fg:#858585 italic",
    ],
]
tag_format = "$version"
version = "2024.7.1a1"
version_files = [
    "boardfarm3_openwrt/__init__.py:version",
    "pyproject.toml:version",
    "pyproject.toml:current",
]

[tool.isort]
profile = "black"

[tool.mypy]
disallow_untyped_defs = true
ignore_missing_imports = true
no_strict_optional = true
pretty = true
show_error_codes = true
warn_redundant_casts = true
warn_unreachable = true

[tool.tbump]
github_url = "https://github.com/vigneshsubbaram/boardfarm-openwrt"
[tool.tbump.version]
current = "2024.7.1a1"

# Example of a semver regexp.
# Make sure this matches current_version before
# using tbump
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  '''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "{new_version}"

# For each file to patch, there is a [[tool.tbump.file]] config
# section containing the path of the file, relative to the
# pyproject.toml location.
[[tool.tbump.file]]
src = "boardfarm3_openwrt/__init__.py"

[[tool.tbump.file]]
src = "pyproject.toml"

[tool.ruff]
ignore = [
    "ANN101", # annotation of self object
    "ANN204", # annotation of __init__()
    "D203",
    "D213",
    "FBT",    # boolean trap, no clear solution
    "N",      # naming convention, already covered by pylint
    "PT003",  # allow scope=function to be explicitly passed to fixtures
    "SIM114", # simplify if-elif by AND/OR combinations
    "TD",     # would conflict with TODO highligther
    "FIX002",
]
select = ["ALL"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["C4", "COM", "PIE", "PT", "RUF", "SIM", "UP"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

target-version = "py39"

unfixable = [
    "F401", # unused imports - we must know if we forgot something...
]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10